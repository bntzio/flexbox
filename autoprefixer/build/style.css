/* CSS Normalize */
article,aside,details,figcaption,figure,footer,header,hgroup,nav,section,summary{display:block;}audio,canvas,video{display:inline-block;}audio:not([controls]){display:none;height:0;}[hidden]{display:none;}html{font-family:sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;}a:focus{outline:thin dotted;}a:active,a:hover{outline:0;}h1{font-size:2em;}abbr[title]{border-bottom:1px dotted;}b,strong{font-weight:700;}dfn{font-style:italic;}mark{background:#ff0;color:#000;}code,kbd,pre,samp{font-family:monospace, serif;font-size:1em;}pre{white-space:pre-wrap;word-wrap:break-word;}q{quotes:\201C \201D \2018 \2019;}small{font-size:80%;}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline;}sup{top:-.5em;}sub{bottom:-.25em;}img{border:0;}svg:not(:root){overflow:hidden;}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em;}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0;}button,input{line-height:normal;}button,html input[type=button],/* 1 */
input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer;}button[disabled],input[disabled]{cursor:default;}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0;}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box;}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none;}textarea{overflow:auto;vertical-align:top;}table{border-collapse:collapse;border-spacing:0;}body,figure{margin:0;}legend,button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}

/* Box-sizing border-box */
* { box-sizing: border-box; }


/* Some default styles to make each box visible */
.box {
  color: white;
  font-size: 40px;
  text-align: center;
  text-shadow:4px 4px 0 rgba(0,0,0,0.1);
  padding: 10px;
}

/* Colours for each box */
.box1 { background:#1abc9c;}
.box2 { background:#3498db;}
.box3 { background:#9b59b6;}
.box4 { background:#34495e;}
.box5 { background:#f1c40f;}
.box6 { background:#e67e22;}
.box7 { background:#e74c3c;}
.box8 { background:#bdc3c7;}
.box9 { background:#2ecc71;}
.box10 { background:#16a085;}


/* We start writing out flexbox here. The above is just page setup */
.container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  /* if flex-wrap: wrap; then flex-grow, shrink and basis works only on the row they are working on */
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  /* flex-direction: row; */

  /* Let's change the axis */
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  border: 10px solid tomato;
  /*
    Wait, with the border we can see that we have no height, and for the flex-direction: column; to work well we need a height,
    because the main axis is now from top to bottom, not from left to right, let's add a min-height!
   */
   /* min-height: 100vh; */
   /* Now let's change to just height change the flexbox layout and make the items stack over each other */
   height: 100vh;
}

.box {
  /*
    Note: flexbox by default will distribute evenly the space between two items if, let's say, the two items take on 400px wide (like in this case) so that is 800px for the window,
    but now what will happen if we make the window smaller (< 800px)? flexbox by default will stretch evenly the two items, so everyone's happy, but if we want to manipulate that,
    we can do it with the flex-shrink property
  */
  /* flex-basis: 500px; the box flexbox items will distribute evenly with 500px space between them (if there's space) if there isn't, just distribute them with equal size */
  /* flex-basis: 500px; */
  /* flex-grow: 1; */

  /* Changes for flex-direction: column; below */
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  /* Let's make no extra space for the items */
  -webkit-flex-basis: 250px;
      -ms-flex-preferred-size: 250px;
          flex-basis: 250px;
}

.box3 {
  /* flex-grow: 10; */

  /* Changes for flex-direction: column; below */
  /* The box3 flexbox item has 5 times more the amount of extra space (if available)*/
  -webkit-box-flex: 5;
  -webkit-flex-grow: 5;
      -ms-flex-positive: 5;
          flex-grow: 5;
}

.box4 {
  /* We want box4 to occupy less space than the other boxes */
  -webkit-flex-basis: 100px;
      -ms-flex-preferred-size: 100px;
          flex-basis: 100px;
}
